Grammar

    0 $accept: functions $end

    1 functions: /* empty */
    2          | function functions

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 declaration: identifiers COLON INTEGER
    5            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 declarations: /* empty */
    7             | declaration SEMICOLON declarations

    8 identifiers: ident
    9            | ident COMMA identifiers

   10 statements: statement SEMICOLON statements
   11           | statement SEMICOLON

   12 statement: var ASSIGN expression
   13          | IF bool_exp THEN statements ENDIF
   14          | IF bool_exp THEN statements ELSE statements ENDIF
   15          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   16          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   17          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   18          | READ vars
   19          | WRITE vars
   20          | CONTINUE
   21          | RETURN expression

   22 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   23    | ident

   24 vars: var
   25     | var COMMA vars

   26 expression: multiplicative_expression
   27           | multiplicative_expression ADD expression
   28           | multiplicative_expression SUB expression

   29 expressions: /* empty */
   30            | expression COMMA expressions
   31            | expression

   32 multiplicative_expression: term
   33                          | term MULT multiplicative_expression
   34                          | term DIV multiplicative_expression
   35                          | term MOD term

   36 term: var
   37     | SUB var
   38     | NUMBER
   39     | SUB NUMBER
   40     | L_PAREN expression R_PAREN
   41     | SUB L_PAREN expression R_PAREN
   42     | ident L_PAREN expressions R_PAREN

   43 bool_exp: relation_and_exp
   44         | relation_and_exp OR bool_exp

   45 relation_and_exp: relation_exp
   46                 | relation_exp AND relation_and_exp

   47 relation_exp: NOT relation_exp
   48             | expression comp expression
   49             | TRUE
   50             | FALSE
   51             | L_PAREN bool_exp R_PAREN

   52 comp: EQ
   53     | NEQ
   54     | LT
   55     | GT
   56     | LTE
   57     | GTE

   58 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 58
NUMBER (259) 5 38 39
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 4 5
ARRAY (268) 5
OF (269) 5
IF (270) 13 14
THEN (271) 13 14
ENDIF (272) 13 14
ELSE (273) 14
WHILE (274) 15 16
DO (275) 16
BEGINLOOP (276) 15 16 17
ENDLOOP (277) 15 16 17
CONTINUE (278) 20
READ (279) 18
WRITE (280) 19
L_PAREN (281) 40 41 42 51
R_PAREN (282) 40 41 42 51
L_SQUARE_BRACKET (283) 5 22
R_SQUARE_BRACKET (284) 5 22
COLON (285) 4 5
SEMICOLON (286) 3 7 10 11
COMMA (287) 9 25 30
TRUE (288) 49
FALSE (289) 50
RETURN (290) 21
FOREACH (291) 17
IN (292) 17
OR (293) 44
AND (294) 46
ASSIGN (295) 12
GTE (296) 57
LTE (297) 56
GT (298) 55
LT (299) 54
NEQ (300) 53
EQ (301) 52
MOD (302) 35
DIV (303) 34
MULT (304) 33
ADD (305) 27
SUB (306) 28 37 39 41
NOT (307) 47


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
functions (54)
    on left: 1 2, on right: 0 2
function (55)
    on left: 3, on right: 2
declaration (56)
    on left: 4 5, on right: 7
declarations (57)
    on left: 6 7, on right: 3 7
identifiers (58)
    on left: 8 9, on right: 4 5 9
statements (59)
    on left: 10 11, on right: 3 10 13 14 15 16 17
statement (60)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 10 11
var (61)
    on left: 22 23, on right: 12 24 25 36 37
vars (62)
    on left: 24 25, on right: 18 19 25
expression (63)
    on left: 26 27 28, on right: 12 21 22 27 28 30 31 40 41 48
expressions (64)
    on left: 29 30 31, on right: 30 42
multiplicative_expression (65)
    on left: 32 33 34 35, on right: 26 27 28 33 34
term (66)
    on left: 36 37 38 39 40 41 42, on right: 32 33 34 35
bool_exp (67)
    on left: 43 44, on right: 13 14 15 16 44 51
relation_and_exp (68)
    on left: 45 46, on right: 43 44 46
relation_exp (69)
    on left: 47 48 49 50 51, on right: 45 46 47
comp (70)
    on left: 52 53 54 55 56 57, on right: 48
ident (71)
    on left: 58, on right: 3 8 9 17 22 23 42


state 0

    0 $accept: . functions $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (functions)

    functions  go to state 2
    function   go to state 3


state 1

    3 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 4

    ident  go to state 5


state 2

    0 $accept: functions . $end

    $end  shift, and go to state 6


state 3

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (functions)

    functions  go to state 7
    function   go to state 3


state 4

   58 ident: IDENT .

    $default  reduce using rule 58 (ident)


state 5

    3 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: functions $end .

    $default  accept


state 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


state 8

    3 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 11
    identifiers   go to state 12
    ident         go to state 13


state 10

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 14


state 11

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    4 declaration: identifiers . COLON INTEGER
    5            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


state 13

    8 identifiers: ident .
    9            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (identifiers)


state 14

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 18
    identifiers   go to state 12
    ident         go to state 13


state 15

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


state 16

    4 declaration: identifiers COLON . INTEGER
    5            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


state 17

    9 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 4

    identifiers  go to state 22
    ident        go to state 13


state 18

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


state 19

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 23
    identifiers   go to state 12
    ident         go to state 13


state 20

    4 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 4 (declaration)


state 21

    5 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


state 22

    9 identifiers: ident COMMA identifiers .

    $default  reduce using rule 9 (identifiers)


state 23

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


state 24

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


state 25

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


state 26

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


state 27

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 37
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 28

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


state 29

   13 statement: IF . bool_exp THEN statements ENDIF
   14          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    bool_exp                   go to state 52
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    ident                      go to state 55


state 30

   15 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    bool_exp                   go to state 56
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    ident                      go to state 55


state 31

   16 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 57


state 32

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


state 33

   18 statement: READ . vars

    IDENT  shift, and go to state 4

    var    go to state 58
    vars   go to state 59
    ident  go to state 40


state 34

   19 statement: WRITE . vars

    IDENT  shift, and go to state 4

    var    go to state 58
    vars   go to state 60
    ident  go to state 40


state 35

   21 statement: RETURN . expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 62
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 36

   17 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 4

    ident  go to state 63


state 37

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 64


state 38

   10 statements: statement . SEMICOLON statements
   11           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 39

   12 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


state 40

   22 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   23    | ident .

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 23 (var)


state 41

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


state 42

   38 term: NUMBER .

    $default  reduce using rule 38 (term)


state 43

   40 term: L_PAREN . expression R_PAREN
   51 relation_exp: L_PAREN . bool_exp R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 69
    multiplicative_expression  go to state 50
    term                       go to state 51
    bool_exp                   go to state 70
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    ident                      go to state 55


state 44

   49 relation_exp: TRUE .

    $default  reduce using rule 49 (relation_exp)


state 45

   50 relation_exp: FALSE .

    $default  reduce using rule 50 (relation_exp)


state 46

   37 term: SUB . var
   39     | SUB . NUMBER
   41     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 71
    L_PAREN  shift, and go to state 72

    var    go to state 73
    ident  go to state 40


state 47

   47 relation_exp: NOT . relation_exp

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    relation_exp               go to state 74
    ident                      go to state 55


state 48

   36 term: var .

    $default  reduce using rule 36 (term)


state 49

   48 relation_exp: expression . comp expression

    GTE  shift, and go to state 75
    LTE  shift, and go to state 76
    GT   shift, and go to state 77
    LT   shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80

    comp  go to state 81


state 50

   26 expression: multiplicative_expression .
   27           | multiplicative_expression . ADD expression
   28           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 26 (expression)


state 51

   32 multiplicative_expression: term .
   33                          | term . MULT multiplicative_expression
   34                          | term . DIV multiplicative_expression
   35                          | term . MOD term

    MOD   shift, and go to state 84
    DIV   shift, and go to state 85
    MULT  shift, and go to state 86

    $default  reduce using rule 32 (multiplicative_expression)


state 52

   13 statement: IF bool_exp . THEN statements ENDIF
   14          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 87


state 53

   43 bool_exp: relation_and_exp .
   44         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 88

    $default  reduce using rule 43 (bool_exp)


state 54

   45 relation_and_exp: relation_exp .
   46                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 89

    $default  reduce using rule 45 (relation_and_exp)


state 55

   22 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   23    | ident .
   42 term: ident . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 90
    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 23 (var)


state 56

   15 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 91


state 57

   16 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 92
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 58

   24 vars: var .
   25     | var . COMMA vars

    COMMA  shift, and go to state 93

    $default  reduce using rule 24 (vars)


state 59

   18 statement: READ vars .

    $default  reduce using rule 18 (statement)


state 60

   19 statement: WRITE vars .

    $default  reduce using rule 19 (statement)


state 61

   40 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 94
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 62

   21 statement: RETURN expression .

    $default  reduce using rule 21 (statement)


state 63

   17 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 95


state 64

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


state 65

   10 statements: statement SEMICOLON . statements
   11           | statement SEMICOLON .

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    $default  reduce using rule 11 (statements)

    statements  go to state 96
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 66

   12 statement: var ASSIGN . expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 97
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 67

   22 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 98
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 68

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (declaration)


state 69

   40 term: L_PAREN expression . R_PAREN
   48 relation_exp: expression . comp expression

    R_PAREN  shift, and go to state 99
    GTE      shift, and go to state 75
    LTE      shift, and go to state 76
    GT       shift, and go to state 77
    LT       shift, and go to state 78
    NEQ      shift, and go to state 79
    EQ       shift, and go to state 80

    comp  go to state 81


state 70

   51 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 100


state 71

   39 term: SUB NUMBER .

    $default  reduce using rule 39 (term)


state 72

   41 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 101
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 73

   37 term: SUB var .

    $default  reduce using rule 37 (term)


state 74

   47 relation_exp: NOT relation_exp .

    $default  reduce using rule 47 (relation_exp)


state 75

   57 comp: GTE .

    $default  reduce using rule 57 (comp)


state 76

   56 comp: LTE .

    $default  reduce using rule 56 (comp)


state 77

   55 comp: GT .

    $default  reduce using rule 55 (comp)


state 78

   54 comp: LT .

    $default  reduce using rule 54 (comp)


state 79

   53 comp: NEQ .

    $default  reduce using rule 53 (comp)


state 80

   52 comp: EQ .

    $default  reduce using rule 52 (comp)


state 81

   48 relation_exp: expression comp . expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 102
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 82

   27 expression: multiplicative_expression ADD . expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 103
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 83

   28 expression: multiplicative_expression SUB . expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    expression                 go to state 104
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 84

   35 multiplicative_expression: term MOD . term

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var    go to state 48
    term   go to state 105
    ident  go to state 55


state 85

   34 multiplicative_expression: term DIV . multiplicative_expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    multiplicative_expression  go to state 106
    term                       go to state 51
    ident                      go to state 55


state 86

   33 multiplicative_expression: term MULT . multiplicative_expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    var                        go to state 48
    multiplicative_expression  go to state 107
    term                       go to state 51
    ident                      go to state 55


state 87

   13 statement: IF bool_exp THEN . statements ENDIF
   14          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 108
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 88

   44 bool_exp: relation_and_exp OR . bool_exp

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    bool_exp                   go to state 109
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    ident                      go to state 55


state 89

   46 relation_and_exp: relation_exp AND . relation_and_exp

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    relation_and_exp           go to state 110
    relation_exp               go to state 54
    ident                      go to state 55


state 90

   42 term: ident L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    $default  reduce using rule 29 (expressions)

    var                        go to state 48
    expression                 go to state 111
    expressions                go to state 112
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 91

   15 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 113
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 92

   16 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 114


state 93

   25 vars: var COMMA . vars

    IDENT  shift, and go to state 4

    var    go to state 58
    vars   go to state 115
    ident  go to state 40


state 94

   40 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99


state 95

   17 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 4

    ident  go to state 116


state 96

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


state 97

   12 statement: var ASSIGN expression .

    $default  reduce using rule 12 (statement)


state 98

   22 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 117


state 99

   40 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 40 (term)


state 100

   51 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 51 (relation_exp)


state 101

   41 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 118


state 102

   48 relation_exp: expression comp expression .

    $default  reduce using rule 48 (relation_exp)


state 103

   27 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 27 (expression)


state 104

   28 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 28 (expression)


state 105

   35 multiplicative_expression: term MOD term .

    $default  reduce using rule 35 (multiplicative_expression)


state 106

   34 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 34 (multiplicative_expression)


state 107

   33 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 33 (multiplicative_expression)


state 108

   13 statement: IF bool_exp THEN statements . ENDIF
   14          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 119
    ELSE   shift, and go to state 120


state 109

   44 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 44 (bool_exp)


state 110

   46 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 46 (relation_and_exp)


state 111

   30 expressions: expression . COMMA expressions
   31            | expression .

    COMMA  shift, and go to state 121

    $default  reduce using rule 31 (expressions)


state 112

   42 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 122


state 113

   15 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 123


state 114

   16 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 124


state 115

   25 vars: var COMMA vars .

    $default  reduce using rule 25 (vars)


state 116

   17 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 125


state 117

   22 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 22 (var)


state 118

   41 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 41 (term)


state 119

   13 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 13 (statement)


state 120

   14 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 126
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 121

   30 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 46

    $default  reduce using rule 29 (expressions)

    var                        go to state 48
    expression                 go to state 111
    expressions                go to state 127
    multiplicative_expression  go to state 50
    term                       go to state 51
    ident                      go to state 55


state 122

   42 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 42 (term)


state 123

   15 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)


state 124

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    var                        go to state 48
    expression                 go to state 49
    multiplicative_expression  go to state 50
    term                       go to state 51
    bool_exp                   go to state 128
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    ident                      go to state 55


state 125

   17 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    FOREACH   shift, and go to state 36

    statements  go to state 129
    statement   go to state 38
    var         go to state 39
    ident       go to state 40


state 126

   14 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 130


state 127

   30 expressions: expression COMMA expressions .

    $default  reduce using rule 30 (expressions)


state 128

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 16 (statement)


state 129

   17 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 131


state 130

   14 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 14 (statement)


state 131

   17 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)
