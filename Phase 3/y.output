Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Function Program

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    4 Declaration: Identifiers COLON INTEGER
    5            | Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 Declarations: /* empty */
    7             | Declaration SEMICOLON Declarations

    8 Identifiers: Ident
    9            | Ident COMMA Identifiers

   10 Statements: Statement SEMICOLON Statements
   11           | Statement SEMICOLON

   12 Statement: Var ASSIGN Expression
   13          | IF BoolExp THEN Statements ElseStatement ENDIF
   14          | WHILE BoolExp BEGINLOOP Statements ENDLOOP
   15          | DO BEGINLOOP Statements ENDLOOP WHILE BoolExp
   16          | FOREACH LocalIdent IN Ident BEGINLOOP Statements ENDLOOP
   17          | READ Vars
   18          | WRITE Vars
   19          | CONTINUE
   20          | RETURN Expression

   21 ElseStatement: /* empty */
   22              | ELSE Statements

   23 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   24    | Ident

   25 Vars: Var
   26     | Var COMMA Vars

   27 Expression: MultExp
   28           | MultExp ADD Expression
   29           | MultExp SUB Expression

   30 Expressions: /* empty */
   31            | Expression COMMA Expressions
   32            | Expression

   33 MultExp: Term
   34        | Term MULT MultExp
   35        | Term DIV MultExp
   36        | Term MOD MultExp

   37 Term: Var
   38     | SUB Var
   39     | NUMBER
   40     | SUB NUMBER
   41     | L_PAREN Expression R_PAREN
   42     | SUB L_PAREN Expression R_PAREN
   43     | Ident L_PAREN Expressions R_PAREN

   44 BoolExp: RAExp
   45        | RAExp OR BoolExp

   46 RAExp: RExp
   47      | RExp AND RAExp

   48 RExp: NOT RExp1
   49     | RExp1

   50 RExp1: Expression Comp Expression
   51      | TRUE
   52      | FALSE
   53      | L_PAREN BoolExp R_PAREN

   54 Comp: EQ
   55     | NEQ
   56     | LT
   57     | GT
   58     | LTE
   59     | GTE

   60 Ident: IDENT

   61 LocalIdent: IDENT

   62 FunctionIdent: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 60 61 62
NUMBER (259) 5 39 40
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 4 5
ARRAY (268) 5
OF (269) 5
IF (270) 13
THEN (271) 13
ENDIF (272) 13
ELSE (273) 22
WHILE (274) 14 15
DO (275) 15
BEGINLOOP (276) 14 15 16
ENDLOOP (277) 14 15 16
CONTINUE (278) 19
READ (279) 17
WRITE (280) 18
L_PAREN (281) 41 42 43 53
R_PAREN (282) 41 42 43 53
L_SQUARE_BRACKET (283) 5 23
R_SQUARE_BRACKET (284) 5 23
COLON (285) 4 5
SEMICOLON (286) 3 7 10 11
COMMA (287) 9 26 31
TRUE (288) 51
FALSE (289) 52
RETURN (290) 20
FOREACH (291) 16
IN (292) 16
OR (293) 45
AND (294) 47
ASSIGN (295) 12
GTE (296) 59
LTE (297) 58
GT (298) 57
LT (299) 56
NEQ (300) 55
EQ (301) 54
MOD (302) 36
DIV (303) 35
MULT (304) 34
ADD (305) 28
SUB (306) 29 38 40 42
NOT (307) 48


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1 2, on right: 0 2
Function (55)
    on left: 3, on right: 2
Declaration (56)
    on left: 4 5, on right: 7
Declarations (57)
    on left: 6 7, on right: 3 7
Identifiers (58)
    on left: 8 9, on right: 4 5 9
Statements (59)
    on left: 10 11, on right: 3 10 13 14 15 16 22
Statement (60)
    on left: 12 13 14 15 16 17 18 19 20, on right: 10 11
ElseStatement (61)
    on left: 21 22, on right: 13
Var (62)
    on left: 23 24, on right: 12 25 26 37 38
Vars (63)
    on left: 25 26, on right: 17 18 26
Expression (64)
    on left: 27 28 29, on right: 12 20 23 28 29 31 32 41 42 50
Expressions (65)
    on left: 30 31 32, on right: 31 43
MultExp (66)
    on left: 33 34 35 36, on right: 27 28 29 34 35 36
Term (67)
    on left: 37 38 39 40 41 42 43, on right: 33 34 35 36
BoolExp (68)
    on left: 44 45, on right: 13 14 15 45 53
RAExp (69)
    on left: 46 47, on right: 44 45 47
RExp (70)
    on left: 48 49, on right: 46 47
RExp1 (71)
    on left: 50 51 52 53, on right: 48 49
Comp (72)
    on left: 54 55 56 57 58 59, on right: 50
Ident (73)
    on left: 60, on right: 8 9 16 23 24 43
LocalIdent (74)
    on left: 61, on right: 16
FunctionIdent (75)
    on left: 62, on right: 3


state 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


state 1

    3 Function: FUNCTION . FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 4

    FunctionIdent  go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


state 4

   62 FunctionIdent: IDENT .

    $default  reduce using rule 62 (FunctionIdent)


state 5

    3 Function: FUNCTION FunctionIdent . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: Program $end .

    $default  accept


state 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


state 8

    3 Function: FUNCTION FunctionIdent SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 12
    Identifiers   go to state 13
    Ident         go to state 14


state 10

   60 Ident: IDENT .

    $default  reduce using rule 60 (Ident)


state 11

    7 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


state 12

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 16


state 13

    4 Declaration: Identifiers . COLON INTEGER
    5            | Identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


state 14

    8 Identifiers: Ident .
    9            | Ident . COMMA Identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (Identifiers)


state 15

    7 Declarations: Declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 19
    Identifiers   go to state 13
    Ident         go to state 14


state 16

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


state 17

    4 Declaration: Identifiers COLON . INTEGER
    5            | Identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


state 18

    9 Identifiers: Ident COMMA . Identifiers

    IDENT  shift, and go to state 10

    Identifiers  go to state 23
    Ident        go to state 14


state 19

    7 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 7 (Declarations)


state 20

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 24
    Identifiers   go to state 13
    Ident         go to state 14


state 21

    4 Declaration: Identifiers COLON INTEGER .

    $default  reduce using rule 4 (Declaration)


state 22

    5 Declaration: Identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


state 23

    9 Identifiers: Ident COMMA Identifiers .

    $default  reduce using rule 9 (Identifiers)


state 24

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 26


state 25

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 28


state 27

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


state 28

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 38
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 29

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


state 30

   13 Statement: IF . BoolExp THEN Statements ElseStatement ENDIF

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    BoolExp     go to state 53
    RAExp       go to state 54
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 31

   14 Statement: WHILE . BoolExp BEGINLOOP Statements ENDLOOP

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    BoolExp     go to state 58
    RAExp       go to state 54
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 32

   15 Statement: DO . BEGINLOOP Statements ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 59


state 33

   19 Statement: CONTINUE .

    $default  reduce using rule 19 (Statement)


state 34

   17 Statement: READ . Vars

    IDENT  shift, and go to state 10

    Var    go to state 60
    Vars   go to state 61
    Ident  go to state 41


state 35

   18 Statement: WRITE . Vars

    IDENT  shift, and go to state 10

    Var    go to state 60
    Vars   go to state 62
    Ident  go to state 41


state 36

   20 Statement: RETURN . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 64
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 37

   16 Statement: FOREACH . LocalIdent IN Ident BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 65

    LocalIdent  go to state 66


state 38

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 67


state 39

   10 Statements: Statement . SEMICOLON Statements
   11           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 40

   12 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 69


state 41

   23 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   24    | Ident .

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 24 (Var)


state 42

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


state 43

   39 Term: NUMBER .

    $default  reduce using rule 39 (Term)


state 44

   41 Term: L_PAREN . Expression R_PAREN
   53 RExp1: L_PAREN . BoolExp R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 72
    MultExp     go to state 51
    Term        go to state 52
    BoolExp     go to state 73
    RAExp       go to state 54
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 45

   51 RExp1: TRUE .

    $default  reduce using rule 51 (RExp1)


state 46

   52 RExp1: FALSE .

    $default  reduce using rule 52 (RExp1)


state 47

   38 Term: SUB . Var
   40     | SUB . NUMBER
   42     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 74
    L_PAREN  shift, and go to state 75

    Var    go to state 76
    Ident  go to state 41


state 48

   48 RExp: NOT . RExp1

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    RExp1       go to state 77
    Ident       go to state 57


state 49

   37 Term: Var .

    $default  reduce using rule 37 (Term)


state 50

   50 RExp1: Expression . Comp Expression

    GTE  shift, and go to state 78
    LTE  shift, and go to state 79
    GT   shift, and go to state 80
    LT   shift, and go to state 81
    NEQ  shift, and go to state 82
    EQ   shift, and go to state 83

    Comp  go to state 84


state 51

   27 Expression: MultExp .
   28           | MultExp . ADD Expression
   29           | MultExp . SUB Expression

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86

    $default  reduce using rule 27 (Expression)


state 52

   33 MultExp: Term .
   34        | Term . MULT MultExp
   35        | Term . DIV MultExp
   36        | Term . MOD MultExp

    MOD   shift, and go to state 87
    DIV   shift, and go to state 88
    MULT  shift, and go to state 89

    $default  reduce using rule 33 (MultExp)


state 53

   13 Statement: IF BoolExp . THEN Statements ElseStatement ENDIF

    THEN  shift, and go to state 90


state 54

   44 BoolExp: RAExp .
   45        | RAExp . OR BoolExp

    OR  shift, and go to state 91

    $default  reduce using rule 44 (BoolExp)


state 55

   46 RAExp: RExp .
   47      | RExp . AND RAExp

    AND  shift, and go to state 92

    $default  reduce using rule 46 (RAExp)


state 56

   49 RExp: RExp1 .

    $default  reduce using rule 49 (RExp)


state 57

   23 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   24    | Ident .
   43 Term: Ident . L_PAREN Expressions R_PAREN

    L_PAREN           shift, and go to state 93
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 24 (Var)


state 58

   14 Statement: WHILE BoolExp . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 94


state 59

   15 Statement: DO BEGINLOOP . Statements ENDLOOP WHILE BoolExp

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 95
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 60

   25 Vars: Var .
   26     | Var . COMMA Vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 25 (Vars)


state 61

   17 Statement: READ Vars .

    $default  reduce using rule 17 (Statement)


state 62

   18 Statement: WRITE Vars .

    $default  reduce using rule 18 (Statement)


state 63

   41 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 97
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 64

   20 Statement: RETURN Expression .

    $default  reduce using rule 20 (Statement)


state 65

   61 LocalIdent: IDENT .

    $default  reduce using rule 61 (LocalIdent)


state 66

   16 Statement: FOREACH LocalIdent . IN Ident BEGINLOOP Statements ENDLOOP

    IN  shift, and go to state 98


state 67

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 3 (Function)


state 68

   10 Statements: Statement SEMICOLON . Statements
   11           | Statement SEMICOLON .

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    $default  reduce using rule 11 (Statements)

    Statements  go to state 99
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 69

   12 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 100
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 70

   23 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 101
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 71

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (Declaration)


state 72

   41 Term: L_PAREN Expression . R_PAREN
   50 RExp1: Expression . Comp Expression

    R_PAREN  shift, and go to state 102
    GTE      shift, and go to state 78
    LTE      shift, and go to state 79
    GT       shift, and go to state 80
    LT       shift, and go to state 81
    NEQ      shift, and go to state 82
    EQ       shift, and go to state 83

    Comp  go to state 84


state 73

   53 RExp1: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 103


state 74

   40 Term: SUB NUMBER .

    $default  reduce using rule 40 (Term)


state 75

   42 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 104
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 76

   38 Term: SUB Var .

    $default  reduce using rule 38 (Term)


state 77

   48 RExp: NOT RExp1 .

    $default  reduce using rule 48 (RExp)


state 78

   59 Comp: GTE .

    $default  reduce using rule 59 (Comp)


state 79

   58 Comp: LTE .

    $default  reduce using rule 58 (Comp)


state 80

   57 Comp: GT .

    $default  reduce using rule 57 (Comp)


state 81

   56 Comp: LT .

    $default  reduce using rule 56 (Comp)


state 82

   55 Comp: NEQ .

    $default  reduce using rule 55 (Comp)


state 83

   54 Comp: EQ .

    $default  reduce using rule 54 (Comp)


state 84

   50 RExp1: Expression Comp . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 105
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 85

   28 Expression: MultExp ADD . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 106
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 86

   29 Expression: MultExp SUB . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var         go to state 49
    Expression  go to state 107
    MultExp     go to state 51
    Term        go to state 52
    Ident       go to state 57


state 87

   36 MultExp: Term MOD . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var      go to state 49
    MultExp  go to state 108
    Term     go to state 52
    Ident    go to state 57


state 88

   35 MultExp: Term DIV . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var      go to state 49
    MultExp  go to state 109
    Term     go to state 52
    Ident    go to state 57


state 89

   34 MultExp: Term MULT . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    Var      go to state 49
    MultExp  go to state 110
    Term     go to state 52
    Ident    go to state 57


state 90

   13 Statement: IF BoolExp THEN . Statements ElseStatement ENDIF

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 111
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 91

   45 BoolExp: RAExp OR . BoolExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    BoolExp     go to state 112
    RAExp       go to state 54
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 92

   47 RAExp: RExp AND . RAExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    RAExp       go to state 113
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 93

   43 Term: Ident L_PAREN . Expressions R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    $default  reduce using rule 30 (Expressions)

    Var          go to state 49
    Expression   go to state 114
    Expressions  go to state 115
    MultExp      go to state 51
    Term         go to state 52
    Ident        go to state 57


state 94

   14 Statement: WHILE BoolExp BEGINLOOP . Statements ENDLOOP

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 116
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 95

   15 Statement: DO BEGINLOOP Statements . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 117


state 96

   26 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 10

    Var    go to state 60
    Vars   go to state 118
    Ident  go to state 41


state 97

   41 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 102


state 98

   16 Statement: FOREACH LocalIdent IN . Ident BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 10

    Ident  go to state 119


state 99

   10 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 10 (Statements)


state 100

   12 Statement: Var ASSIGN Expression .

    $default  reduce using rule 12 (Statement)


state 101

   23 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 120


state 102

   41 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 41 (Term)


state 103

   53 RExp1: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 53 (RExp1)


state 104

   42 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 121


state 105

   50 RExp1: Expression Comp Expression .

    $default  reduce using rule 50 (RExp1)


state 106

   28 Expression: MultExp ADD Expression .

    $default  reduce using rule 28 (Expression)


state 107

   29 Expression: MultExp SUB Expression .

    $default  reduce using rule 29 (Expression)


state 108

   36 MultExp: Term MOD MultExp .

    $default  reduce using rule 36 (MultExp)


state 109

   35 MultExp: Term DIV MultExp .

    $default  reduce using rule 35 (MultExp)


state 110

   34 MultExp: Term MULT MultExp .

    $default  reduce using rule 34 (MultExp)


state 111

   13 Statement: IF BoolExp THEN Statements . ElseStatement ENDIF

    ELSE  shift, and go to state 122

    $default  reduce using rule 21 (ElseStatement)

    ElseStatement  go to state 123


state 112

   45 BoolExp: RAExp OR BoolExp .

    $default  reduce using rule 45 (BoolExp)


state 113

   47 RAExp: RExp AND RAExp .

    $default  reduce using rule 47 (RAExp)


state 114

   31 Expressions: Expression . COMMA Expressions
   32            | Expression .

    COMMA  shift, and go to state 124

    $default  reduce using rule 32 (Expressions)


state 115

   43 Term: Ident L_PAREN Expressions . R_PAREN

    R_PAREN  shift, and go to state 125


state 116

   14 Statement: WHILE BoolExp BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


state 117

   15 Statement: DO BEGINLOOP Statements ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 127


state 118

   26 Vars: Var COMMA Vars .

    $default  reduce using rule 26 (Vars)


state 119

   16 Statement: FOREACH LocalIdent IN Ident . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 128


state 120

   23 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 23 (Var)


state 121

   42 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 42 (Term)


state 122

   22 ElseStatement: ELSE . Statements

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 129
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 123

   13 Statement: IF BoolExp THEN Statements ElseStatement . ENDIF

    ENDIF  shift, and go to state 130


state 124

   31 Expressions: Expression COMMA . Expressions

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47

    $default  reduce using rule 30 (Expressions)

    Var          go to state 49
    Expression   go to state 114
    Expressions  go to state 131
    MultExp      go to state 51
    Term         go to state 52
    Ident        go to state 57


state 125

   43 Term: Ident L_PAREN Expressions R_PAREN .

    $default  reduce using rule 43 (Term)


state 126

   14 Statement: WHILE BoolExp BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 14 (Statement)


state 127

   15 Statement: DO BEGINLOOP Statements ENDLOOP WHILE . BoolExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    NOT      shift, and go to state 48

    Var         go to state 49
    Expression  go to state 50
    MultExp     go to state 51
    Term        go to state 52
    BoolExp     go to state 132
    RAExp       go to state 54
    RExp        go to state 55
    RExp1       go to state 56
    Ident       go to state 57


state 128

   16 Statement: FOREACH LocalIdent IN Ident BEGINLOOP . Statements ENDLOOP

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    FOREACH   shift, and go to state 37

    Statements  go to state 133
    Statement   go to state 39
    Var         go to state 40
    Ident       go to state 41


state 129

   22 ElseStatement: ELSE Statements .

    $default  reduce using rule 22 (ElseStatement)


state 130

   13 Statement: IF BoolExp THEN Statements ElseStatement ENDIF .

    $default  reduce using rule 13 (Statement)


state 131

   31 Expressions: Expression COMMA Expressions .

    $default  reduce using rule 31 (Expressions)


state 132

   15 Statement: DO BEGINLOOP Statements ENDLOOP WHILE BoolExp .

    $default  reduce using rule 15 (Statement)


state 133

   16 Statement: FOREACH LocalIdent IN Ident BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 134


state 134

   16 Statement: FOREACH LocalIdent IN Ident BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 16 (Statement)
